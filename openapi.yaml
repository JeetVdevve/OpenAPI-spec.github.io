openapi: 3.0.1
info:
  title: OCPP.Core.Management
  version: '1.0'
paths:
  /v1/auth/google:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              type: string
          text/json; x-api-version=1.0:
            schema:
              type: string
          application/*+json; x-api-version=1.0:
            schema:
              type: string
      responses:
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/auth/send-code:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/auth/log-in:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/OtpDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/OtpDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/OtpDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenModel'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenModel'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenModel'
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/auth/log-out:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/auth/refreshAccessToken:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/TokenModelDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/TokenModelDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/TokenModelDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/TokenDetailsDto'
        '401':
          description: Unauthorized
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/charge/{sessionId}:
    post:
      tags:
        - Charge
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
        - name: Id
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
  /v1/charge/{sessionId}/stop:
    post:
      tags:
        - Charge
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/charge/reset:
    get:
      tags:
        - Charge
      parameters:
        - name: Id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/charge/setCurrent:
    post:
      tags:
        - Charge
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: connectorId
          in: query
          schema:
            type: string
        - name: current
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/charge/unlock:
    get:
      tags:
        - Charge
      parameters:
        - name: Id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/chargers/{locationId}:
    get:
      tags:
        - Charger
      parameters:
        - name: locationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerStatusDto'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerStatusDto'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerStatusDto'
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/chargerLocation/{locationId}:
    get:
      tags:
        - Charger
      parameters:
        - name: locationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerDetailsDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerDetailsDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerDetailsDto'
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/chargerLocations:
    get:
      tags:
        - Charger
      parameters:
        - name: MinLongitude
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: MaxLongitude
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: MinLatitude
          in: query
          required: true
          schema:
            type: number
            format: double
        - name: MaxLatitude
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
  /v1/charger/{chargerId}:
    get:
      tags:
        - Charger
      parameters:
        - name: chargerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerStatusDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerStatusDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargerStatusDto'
  /v1/charger/getAllChargers:
    get:
      tags:
        - Charger
      responses:
        '200':
          description: Success
  /v1/charger/{chargerId}/start:
    post:
      tags:
        - Charger
      parameters:
        - name: chargerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/RemoteStartDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/RemoteStartDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/RemoteStartDto'
      responses:
        '200':
          description: Success
  /v1/user/{id}/balance:
    get:
      tags:
        - Funding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserBalanceDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserBalanceDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserBalanceDto'
  /v1/user/{id}/create-payment-intent:
    post:
      tags:
        - Funding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PaymentAmountDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PaymentAmountDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PaymentAmountDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentIntentResponseDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentIntentResponseDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentIntentResponseDto'
  /v1/user/{id}/transactions:
    get:
      tags:
        - Funding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: skip
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentTransactionResDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentTransactionResDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PaymentTransactionResDto'
  /v1/user/{id}/transactions/count:
    get:
      tags:
        - Funding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/user/paymentComplete:
    post:
      tags:
        - Funding
      responses:
        '200':
          description: Success
  /v1/user/sendNotifications:
    post:
      tags:
        - Notification
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/NotificationDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/NotificationDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/NotificationDto'
      responses:
        '200':
          description: Success
  /v1/user/{id}/notification_token:
    post:
      tags:
        - Notification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/FcmModel'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/FcmModel'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/FcmModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Notification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/reservation/charger/{chargerId}:
    get:
      tags:
        - Reservation
      parameters:
        - name: chargerId
          in: path
          required: true
          schema:
            type: string
        - name: gteStartTime
          in: query
          required: true
          schema:
            type: string
        - name: IteEndTime
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationFetchedByChargerModel'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationFetchedByChargerModel'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationFetchedByChargerModel'
    post:
      tags:
        - Reservation
      parameters:
        - name: chargerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/AddReservationRequestDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/AddReservationRequestDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/AddReservationRequestDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserReservationModel'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserReservationModel'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserReservationModel'
  /v1/reservation/user/{userId}:
    get:
      tags:
        - Reservation
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/GetReservationByUserDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/GetReservationByUserDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/GetReservationByUserDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReservationModel'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReservationModel'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserReservationModel'
  /v1/reservation/user/{id}:
    delete:
      tags:
        - Reservation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: boolean
            application/json; x-api-version=1.0:
              schema:
                type: boolean
            text/json; x-api-version=1.0:
              schema:
                type: boolean
  /v1/user/{userId}/favorites:
    get:
      tags:
        - User Chargers
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerDetailsDto'
  /v1/user/{userId}/favorites/{chargerLocationId}:
    post:
      tags:
        - User Chargers
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: chargerLocationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - User Chargers
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: chargerLocationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/user/{id}/sessions:
    get:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ChargingStatus'
  /v1/user/{id}/sessions/count:
    get:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /v1/user/{id}:
    get:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserInfoDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserInfoDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserInfoDto'
    put:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserModel'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserModel'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/UserModel'
        '400':
          description: Bad Request
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/ErrorDto'
  /v1/user/{userId}/privateCharger:
    get:
      tags:
        - User Info
      parameters:
        - name: id
          in: query
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivateChargersDto'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivateChargersDto'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivateChargersDto'
    post:
      tags:
        - User Info
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
      responses:
        '200':
          description: Success
    put:
      tags:
        - User Info
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PrivateChargerReqDto'
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PrivateChargerReturnDto'
            application/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PrivateChargerReturnDto'
            text/json; x-api-version=1.0:
              schema:
                $ref: '#/components/schemas/PrivateChargerReturnDto'
  /v1/vehicles:
    get:
      tags:
        - User Info
      responses:
        '200':
          description: Success
  /v1/user/{id}/phone/send-code:
    post:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserPhoneCodeReq'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserPhoneCodeReq'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/UserPhoneCodeReq'
      responses:
        '200':
          description: Success
  /v1/user/{id}/phone/verify-code:
    post:
      tags:
        - User Info
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PhoneCodeDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PhoneCodeDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/PhoneCodeDto'
      responses:
        '200':
          description: Success
  /v1/user/{id}/vehicles:
    get:
      tags:
        - Vehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
            application/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
            text/json; x-api-version=1.0:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleDto'
    post:
      tags:
        - Vehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/CreateVehicleDto'
          text/json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/CreateVehicleDto'
          application/*+json; x-api-version=1.0:
            schema:
              $ref: '#/components/schemas/CreateVehicleDto'
      responses:
        '200':
          description: Success
components:
  schemas:
    AddReservationRequestDto:
      type: object
      properties:
        startTime:
          type: string
          nullable: true
        endTime:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
      additionalProperties: false
    ChargerDetailsDto:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/LocationModelDto'
        chargers:
          type: array
          items:
            $ref: '#/components/schemas/ChargerStatusDto'
          nullable: true
        id:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        locationType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ChargerMetaData:
      type: object
      properties:
        icon:
          type: string
          nullable: true
        isDefault:
          type: boolean
        name:
          type: string
          nullable: true
      additionalProperties: false
    ChargerStatusDto:
      required:
        - id
      type: object
      properties:
        id:
          minLength: 1
          type: string
        locationId:
          type: string
          nullable: true
        availability:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        maxKw:
          type: number
          format: float
        description:
          type: string
          nullable: true
        connectorType:
          type: string
          nullable: true
        pricePerMinute:
          type: number
          format: float
      additionalProperties: false
    ChargingStatus:
      type: object
      properties:
        chargerPointId:
          type: string
          nullable: true
        connectorId:
          type: integer
          format: int32
        transactionId:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        lastTime:
          type: string
          format: date-time
          nullable: true
        meterStart:
          type: number
          format: double
        meterStop:
          type: number
          format: double
          nullable: true
        timeElapsed:
          type: number
          format: double
          nullable: true
        meterConsumption:
          type: number
          format: double
          nullable: true
        lastStatus:
          type: string
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CreateVehicleDto:
      required:
        - maker
        - model
        - year
      type: object
      properties:
        nickname:
          type: string
          nullable: true
        maker:
          minLength: 1
          type: string
        model:
          minLength: 1
          type: string
        year:
          minLength: 1
          type: string
      additionalProperties: false
    ElectricityRates:
      type: object
      properties:
        midPeak:
          type: number
          format: double
        offPeak:
          type: number
          format: double
        onPeak:
          type: number
          format: double
      additionalProperties: false
    ErrorDto:
      type: object
      properties:
        message:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    FcmModel:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        fcmToken:
          type: string
          nullable: true
        deviceId:
          type: string
          nullable: true
      additionalProperties: false
    GetReservationByUserDto:
      type: object
      properties:
        endTimeRange:
          type: string
          nullable: true
      additionalProperties: false
    LocationModelDto:
      type: object
      properties:
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
      additionalProperties: false
    NotificationDto:
      type: object
      properties:
        fcmToken:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        messageGroup:
          type: string
          nullable: true
      additionalProperties: false
    OtpDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        fromEmailCode:
          type: string
          nullable: true
      additionalProperties: false
    PaymentAmountDto:
      type: object
      properties:
        amount:
          type: integer
          format: int32
        currency:
          type: string
          nullable: true
      additionalProperties: false
    PaymentIntentResponseDto:
      required:
        - customer
        - paymentIntentClientSecret
      type: object
      properties:
        customer:
          minLength: 1
          type: string
        paymentIntentClientSecret:
          minLength: 1
          type: string
      additionalProperties: false
    PaymentTransactionResDto:
      type: object
      properties:
        amount:
          type: number
          format: double
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
        type:
          $ref: '#/components/schemas/TransactionTypeEnum'
      additionalProperties: false
    PhoneCodeDto:
      type: object
      properties:
        fromRequestCode:
          type: string
          nullable: true
        fromSmsCode:
          type: string
          nullable: true
      additionalProperties: false
    PrivateChargerReqDto:
      required:
        - chargerId
      type: object
      properties:
        chargerId:
          minLength: 1
          type: string
        electricityRates:
          $ref: '#/components/schemas/ElectricityRates'
        icon:
          type: string
          nullable: true
        isDefault:
          type: boolean
          nullable: true
        name:
          type: string
          nullable: true
        schedule:
          $ref: '#/components/schemas/ScheduleData'
      additionalProperties: false
    PrivateChargerReturnDto:
      type: object
      properties:
        charger:
          $ref: '#/components/schemas/ChargerStatusDto'
        electricityRates:
          $ref: '#/components/schemas/ElectricityRates'
        metaData:
          $ref: '#/components/schemas/ChargerMetaData'
        schedule:
          $ref: '#/components/schemas/ScheduleData'
      additionalProperties: false
    PrivateChargersDto:
      type: object
      properties:
        charger:
          $ref: '#/components/schemas/ChargerStatusDto'
      additionalProperties: false
    RemoteStartDto:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        connectorId:
          type: string
          nullable: true
        rfIdTag:
          type: string
          nullable: true
        vehicleId:
          type: string
          nullable: true
      additionalProperties: false
    ReservationFetchedByChargerModel:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      additionalProperties: false
    ScheduleData:
      type: object
      properties:
        days:
          type: array
          items:
            type: string
          nullable: true
        endTime:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        vehicleId:
          type: string
          nullable: true
      additionalProperties: false
    TokenDetailsDto:
      type: object
      properties:
        expiryDate:
          type: string
          format: date-time
        token:
          type: string
          nullable: true
      additionalProperties: false
    TokenModel:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/TokenDetailsDto'
        refreshToken:
          $ref: '#/components/schemas/TokenDetailsDto'
        userId:
          type: string
          nullable: true
      additionalProperties: false
    TokenModelDto:
      required:
        - refreshToken
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
        refreshToken:
          minLength: 1
          type: string
      additionalProperties: false
    TransactionTypeEnum:
      enum:
        - manual_load
        - auto_load
        - charging_session_payment
        - physical_card_order
      type: string
    UpdateUserDto:
      type: object
      properties:
        country:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
      additionalProperties: false
    UserAddressInfo:
      type: object
      properties:
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        unit:
          type: string
          nullable: true
      additionalProperties: false
    UserBalanceDto:
      required:
        - balance
      type: object
      properties:
        balance:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false
    UserInfoDto:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/UserAddressInfo'
      additionalProperties: false
    UserModel:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        active:
          type: string
          nullable: true
        verified:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
      additionalProperties: false
    UserPhoneCodeReq:
      type: object
      properties:
        phone:
          type: string
          nullable: true
      additionalProperties: false
    UserReservationModel:
      type: object
      properties:
        chargerId:
          type: string
          nullable: true
        startTime:
          type: string
          format: date-time
        reservationId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
      additionalProperties: false
    VehicleDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        maker:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
        year:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please enter into field the word 'Bearer' following by space and JWT
      name: Authorization
      in: query
